{"version":3,"sources":["logo.svg","components/map-wrapper.component.js","helpers/constants/actionTypes.js","axios/config.js","redux/actions/countries.js","containers/nav-menu.container.js","redux/actions/drawer.js","components/charts.component.js","containers/home.container.js","App.js","reportWebVitals.js","redux/reducers/countries.js","redux/reducers/drawer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["MapWrapper","withScriptjs","withGoogleMap","props","google","window","markers","countries","map","country","latlng","length","MarkerWithLabel","position","lat","lng","labelAnchor","maps","Point","labelStyle","fontSize","backgroundColor","color","name","defaultZoom","defaultCenter","UPDATE_COUNTRIES","OPEN_CLOSE_DRAWER","CHANGE_COMPONENT","axiosInstance","axios","create","apiUrl","process","UpdateCountries","type","payload","SearchCountriesByRegionRequest","dispatch","get","then","result","data","catch","error","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","margin","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","inputRoot","inputInput","marginTop","title","formControl","minWidth","selectEmpty","select","borderColor","inputLabel","connect","state","classes","useTheme","useState","value","setValue","region","setRegion","handleOpenCloseDrawer","handleClick","component","ChangeComponent","className","CssBaseline","AppBar","clsx","open","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","FormControl","InputLabel","id","Select","labelId","onChange","e","target","MenuItem","Input","placeholder","input","console","log","Drawer","anchor","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","getRandomColor","scaleOrdinal","schemeCategory10","range","i","Math","floor","random","Charts","population","style","height","ResponsiveContainer","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","entry","Cell","textAlign","charts","chartsContainer","Box","flexDirection","googleMapURL","loadingElement","containerElement","mapElement","Container","App","path","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","Object","assign","middleware","applyMiddleware","thunk","store","createStore","reducer","compose","devToolsExtension","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f57fd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { MarkerWithLabel } from 'react-google-maps/lib/components/addons/MarkerWithLabel';\r\n\r\n\r\nconst MapWrapper = withScriptjs(withGoogleMap((props) => {\r\n    const google = window.google\r\n\r\n    const markers = props.countries.map((country) => {\r\n        if (country.latlng.length !== 0) {\r\n            return (\r\n\r\n                <div key={country.name}>\r\n                    <MarkerWithLabel\r\n                        position={{ lat: country.latlng[0], lng: country.latlng[1] }}\r\n                        labelAnchor={new google.maps.Point(0, 0)}\r\n                        labelStyle={{ fontSize: \"10px\", backgroundColor: 'none', color: 'red' }}\r\n                    >\r\n                        <div>{country.name}</div>\r\n                    </MarkerWithLabel>\r\n                </div>\r\n            )\r\n        }\r\n    });\r\n\r\n    return (\r\n            <GoogleMap\r\n                defaultZoom={2}\r\n                defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n            >\r\n                {markers}\r\n            </GoogleMap>\r\n    )\r\n}))\r\n\r\nexport default MapWrapper;\r\n\r\n    //     return <MarkerWithLabel key={country.name} position={{ lat: country.latlng[0], lng: country.latlng[1] }} \r\n    //   labelStyle={{backgroundColor: \"yellow\", fontSize: \"32px\", padding: \"16px\"}}>\r\n    //         HEHEHE\r\n    //     </MarkerWithLabel>","export const UPDATE_COUNTRIES = \"UPDATE_COUNTRIES\";\r\nexport const OPEN_CLOSE_DRAWER = \"OPEN_CLOSE_DRAWER\";\r\nexport const CHANGE_COMPONENT = \"CHANGE_COMPONENT\";","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create();\r\n","import { UPDATE_COUNTRIES } from '../../helpers/constants/actionTypes';\r\nimport { axiosInstance } from '../../axios/config';\r\n\r\nconst apiUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const UpdateCountries = (countries) => {\r\n    return {\r\n        type: UPDATE_COUNTRIES, \r\n        payload: {\r\n            countries: countries\r\n        }\r\n    }\r\n}\r\n\r\nexport const SearchCountriesByNameRequest = (name) => {\r\n    return (dispatch) => {\r\n        return axiosInstance.get(`${apiUrl}/name/${name}`)\r\n            .then(result => {\r\n                dispatch(UpdateCountries(result.data))\r\n            })\r\n            .catch(error => {\r\n                throw error;\r\n            })\r\n    }\r\n}\r\n\r\nexport const SearchCountriesByRegionRequest = (name) => {\r\n    return (dispatch) => {\r\n        return axiosInstance.get(`${apiUrl}/region/${name}`)\r\n            .then(result => {\r\n                dispatch(UpdateCountries(result.data))\r\n            })\r\n            .catch(error => {\r\n                throw error;\r\n            })\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Input from '@material-ui/core/Input';\r\nimport { connect } from 'react-redux';\r\nimport { SearchCountriesByNameRequest, SearchCountriesByRegionRequest } from '../redux/actions/countries';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport { OpenCloseDrawer } from '../redux/actions/drawer';\r\nimport { ChangeComponent } from '../redux/actions/drawer';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.countries.countries,\r\n    drawer: state.drawer.drawer\r\n})\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        margin: 0\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    inputRoot: {\r\n        margin: theme.spacing(1),\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        marginTop: theme.spacing(2),\r\n        color: 'white'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color: 'white'\r\n\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    select: {\r\n        borderColor: 'white',\r\n        color: 'white'\r\n    },\r\n    inputLabel: {\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\nconst NavMenu = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const [region, setRegion] = useState('');\r\n\r\n    const handleOpenCloseDrawer = () => {\r\n        props.dispatch(OpenCloseDrawer());\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        console.log(value);\r\n        if (e.target.value !== '') {\r\n            props.dispatch(SearchCountriesByNameRequest(e.target.value));\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (e) => {\r\n        setRegion(e.target.value);\r\n        props.dispatch(SearchCountriesByRegionRequest(e.target.value));\r\n    }\r\n\r\n    const handleClick = (component) => {\r\n        props.dispatch(ChangeComponent(component));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: props.drawer.open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleOpenCloseDrawer}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, props.drawer.open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        Persistent drawer\r\n          </Typography>\r\n\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-helper-label\" className={classes.inputLabel}>Region</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-helper-label\"\r\n                            id=\"demo-simple-select-helper\"\r\n                            value={region}\r\n                            onChange={handleSelectChange}\r\n                            className={classes.select}\r\n                        >\r\n                            <MenuItem value={'Africa'}>Africa</MenuItem>\r\n                            <MenuItem value={'Americas'}>Americas</MenuItem>\r\n                            <MenuItem value={'Asia'}>Asia</MenuItem>\r\n                            <MenuItem value={'Europe'}>Europe</MenuItem>\r\n                            <MenuItem value={'Oceania'}>Oceania</MenuItem>\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <Input\r\n                        placeholder=\"Search\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput\r\n                        }}\r\n                        onChange={handleChange}\r\n                    >\r\n                    </Input>\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={props.drawer.open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleOpenCloseDrawer}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {['Map', 'Chart'].map((text, index) => (\r\n                        <ListItem button key={text} onClick={() => handleClick(text)}>\r\n                            <ListItemIcon>{index === 0 ? <MapIcon /> : <BarChartIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: props.drawer.open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavMenu)\r\n\r\n\r\n\r\n        // <AppBar position=\"static\" children={<input />}>\r\n        //     <Toolbar>\r\n        //         <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        //         </IconButton>\r\n        //         <Typography variant=\"h6\" className={classes.title}>\r\n        //             Countries \r\n        //         </Typography>\r\n\r\n        //         <Input\r\n        //             placeholder=\"Search\"\r\n        //             classes={{\r\n        //                 root: classes.inputRoot,\r\n        //                 input: classes.inputInput\r\n        //             }}\r\n        //             onChange={handleChange}\r\n        //         >\r\n        //         </Input>\r\n        //     </Toolbar>\r\n        // </AppBar>\r\n\r\n    // return (\r\n    //     <AppBar position=\"static\" children={<input />}>\r\n    //         <Toolbar>\r\n    //             <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n    //             </IconButton>\r\n    //             <Typography variant=\"h6\" className={classes.title}>\r\n    //                 Countries \r\n    //             </Typography>\r\n    //             <Input\r\n    //                 placeholder=\"Search\"\r\n    //                 classes={{\r\n    //                     root: classes.inputRoot,\r\n    //                     input: classes.inputInput\r\n    //                 }}\r\n    //                 onChange={handleChange}\r\n    //             >\r\n    //             </Input>\r\n    //             <IconButton onClick={handleClick} aria-label=\"search\"><Search className={classes.searchButton}></Search></IconButton>\r\n    //         </Toolbar>\r\n    //     </AppBar>\r\n    // )","import { CHANGE_COMPONENT, OPEN_CLOSE_DRAWER } from '../../helpers/constants/actionTypes';\r\n\r\nexport const ChangeComponent = (component) => {\r\n    return {\r\n        type: CHANGE_COMPONENT,\r\n        payload: {\r\n            drawer: {\r\n                component: component\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const OpenCloseDrawer = () => {\r\n    return {\r\n        type: OPEN_CLOSE_DRAWER,\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport { scaleOrdinal } from 'd3-scale';\r\nimport { schemeCategory10 } from 'd3-scale-chromatic';\r\n\r\nconst colors = scaleOrdinal(schemeCategory10).range();\r\n\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        ],\r\n    },\r\n}\r\n\r\nconst getRandomColor = () => {\r\n    let letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n\r\nconst Charts = (props) => {\r\n\r\n    const data = props.countries.map((country => {\r\n        return {\r\n            name: country.name, population: country.population\r\n        };\r\n    }))\r\n\r\n    return (\r\n        <div style={{width: '100%', height: '85vh'}}>\r\n            <ResponsiveContainer>\r\n                <BarChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5, right: 30, left: 200, bottom: 5,\r\n                    }}\r\n                > <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"population\" fill=\"#8884d8\" >\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={getRandomColor()} />\r\n                        ))}\r\n                    </Bar>\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;\r\n\r\n// const data = {\r\n//     labels: props.countries.map((country) => {\r\n//         return country.name\r\n//     }),\r\n//     datasets: [\r\n//         {\r\n//             label: '# of Population',\r\n//             data: props.countries.map((country) => {\r\n//                 return country.population\r\n//             }),\r\n//             backgroundColor: props.countries.map((country) => getRandomColor()),\r\n//             borderColor: props.countries.map((country) => getRandomColor()),\r\n//             borderWidth: 1,\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n    // return (\r\n    //     <Bar\r\n    //         data={data}\r\n    //         width={100}\r\n    //         height={50}\r\n    //         options={options}\r\n    //     />\r\n    // )","import React from 'react';\r\nimport NavMenu from \"./nav-menu.container\";\r\nimport MapWrapper from \"../components/map-wrapper.component\";\r\nimport { Box, Container, Grid, List, ListItem, makeStyles, Paper, Card, Typography } from \"@material-ui/core\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { connect } from 'react-redux';\r\nimport Charts from '../components/charts.component';\r\nimport { SearchCountriesByRegionRequest } from '../redux/actions/countries';\r\nimport clsx from 'clsx';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.countries.countries,\r\n    drawer: state.drawer.drawer\r\n})\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n    },\r\n    charts: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        marginLeft: -drawerWidth\r\n    },\r\n    chartsContainer: {\r\n        width: 100\r\n    },\r\n    content: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nconst Home = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const getComponent = () => {\r\n        if (props.drawer.component === 'Map') {\r\n            return <MapWrapper\r\n                countries={props.countries}\r\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBpJFnOEgJOdSsSSd3jzGdVqzz4EGqb5s0&v=3.exp&libraries=geometry,drawing,places\"\r\n                loadingElement={<div style={{ height: `100%` }} />}\r\n                containerElement={<div style={{ height: `100vh` }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n        };\r\n\r\n        return (<Container >\r\n            <Charts countries={props.countries} ></Charts>\r\n        </Container>)\r\n    }\r\n\r\n\r\n\r\n    const handleClick = (name) => {\r\n        props.dispatch(SearchCountriesByRegionRequest(name));\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <div className={clsx(classes.content, {\r\n                    [classes.contentShift]: props.drawer.open,\r\n                })}>\r\n        <NavMenu />\r\n                \r\n                <Box flexDirection=\"column\" >\r\n                    <Box style={{ width: '100%' }} >\r\n                        {getComponent()}\r\n                    </Box>\r\n                </Box>\r\n                {/* <Box flexDirection=\"column\">\r\n                <Box alignSelf=\"center\" style={{ width: '100%' }}>\r\n                </Box>\r\n            </Box> */}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n\r\n\r\n\r\n//  <List>\r\n//                             <ListItem button onClick={() => handleClick('Africa')}>Africa</ListItem>\r\n//                             <ListItem button onClick={() => handleClick('Americas')}>Americas</ListItem>\r\n//                             <ListItem button onClick={() => handleClick('Asia')}>Asia</ListItem>\r\n//                             <ListItem button onClick={() => handleClick('Europe')}>Europe</ListItem>\r\n//                             <ListItem button onClick={() => handleClick('Oceania')}>Oceania</ListItem>\r\n//                         </List> \r\n\r\n\r\n\r\n    // <div style={{width: '100%'}}>\r\n    //     <NavMenu></NavMenu>\r\n\r\n    //     <div className={classes.root}>\r\n    //   <Grid container spacing={0}>\r\n    //   <Grid item xs={4}>\r\n    //         <List>\r\n    //             <ListItem button  onClick={() => handleClick('Africa')}>Africa</ListItem>\r\n    //             <ListItem button onClick={() => handleClick('Americas')}>Americas</ListItem>\r\n    //             <ListItem button onClick={() => handleClick('Asia')}>Asia</ListItem>\r\n    //             <ListItem button onClick={() => handleClick('Europe')}>Europe</ListItem>\r\n    //             <ListItem button onClick={() => handleClick('Oceania')}>Oceania</ListItem>\r\n    //         </List>\r\n    //     </Grid>\r\n\r\n    //     <Grid item xs={8} >\r\n    //     <MapWrapper \r\n    //              countries={props.countries}\r\n    //              googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&v=3.exp&libraries=geometry,drawing,places`}\r\n    //              loadingElement={<div style={{ height: `50%` }} />}\r\n    //              containerElement={<div style={{ height: `100vh` }} />}\r\n    //              mapElement={<div style={{ height: `50%` }} />}\r\n    //          />\r\n    //     </Grid>\r\n\r\n    //     <Grid item xs={12} >\r\n    //         <Charts countries={props.countries}></Charts>\r\n    //     </Grid>\r\n    //   </Grid>\r\n    // </div>\r\n    // </div>","import logo from './logo.svg';\nimport './App.css';\nimport {MapWrapper} from \"./components/map-wrapper.component\";\nimport {AppBar} from \"@material-ui/core\";\nimport React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"./containers/home.container\";\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' component={Home}/>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UPDATE_COUNTRIES } from '../../helpers/constants/actionTypes';\r\n\r\nconst initialState = {\r\n    countries: []\r\n}\r\n\r\nexport const countries = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_COUNTRIES:\r\n            return Object.assign({}, state, {\r\n                countries: action.payload.countries\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}","import { CHANGE_COMPONENT, OPEN_CLOSE_DRAWER } from '../../helpers/constants/actionTypes';\r\n\r\nconst initialState = {\r\n    drawer: {\r\n        open: false,\r\n        component: 'Map'\r\n    }\r\n}\r\n\r\nexport const drawer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_CLOSE_DRAWER:\r\n            return Object.assign({}, state, {\r\n                drawer: {\r\n                    open: !state.drawer.open,\r\n                    component: state.drawer.component\r\n                }\r\n            });\r\n        case CHANGE_COMPONENT:\r\n            return Object.assign({}, state, {\r\n                drawer: {\r\n                    open: state.drawer.open,\r\n                    component: action.payload.drawer.component\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { countries } from './countries';\r\nimport { drawer } from './drawer';\r\n\r\nexport default combineReducers({\r\n    countries,\r\n    drawer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middleware = applyMiddleware(thunk)\r\nconst store = createStore(reducer, compose(middleware,  window.devToolsExtension ? window.devToolsExtension() : f => f));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}